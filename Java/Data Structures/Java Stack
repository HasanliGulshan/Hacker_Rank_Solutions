import java.util.*;

class Solution{

    private static final Map<Character, Character> bracket = new HashMap<>();

    static {
        bracket.put('(', ')');
        bracket.put('[', ']');
        bracket.put('{', '}');
    }

    private static void balanced(String expression) {
        Deque<Character> balanced = new ArrayDeque<>();

        if (expression.length() % 2 != 0) {
            System.out.println("false");
        } else {
            for (char s : expression.toCharArray()) {
                if (bracket.containsKey(s)) {
                    balanced.push(s);
                } else {
                    if (balanced.isEmpty() || (s != bracket.get(balanced.pop()))) {

                        System.out.println("false");
                        return;

                    }
                }

            }

            System.out.println(balanced.isEmpty() ? "true" : "false");
        }
    }

    public static void main(String [] argh)
    {
        Scanner sc = new Scanner(System.in);
        Deque<Character> res = new ArrayDeque<>();

        while (sc.hasNext()) {
            String input =sc.next();

            balanced(input);
        }
    }
}
