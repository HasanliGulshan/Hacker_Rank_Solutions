import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {

     static int palindromeIndex(String s) {
            int low = 0;
            int high = s.length() - 1;

            while (low < high) {
                if (s.charAt(low) == s.charAt(high)) {
                    low++;
                    high--;
                } else {
                    if (check(low, s)) {
                        return low;
                    }
                    if (check(high, s)) {
                        return high;
                    }
                }

            }
            return -1;
        }


    static boolean check(int i,String s){
        s = s.substring(0,i) + s.substring(i+1);
        StringBuilder str =new StringBuilder(s);
        str.reverse();

        if(s.equals(str.toString()))
            return true;
        return false;
    }

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int q = scanner.nextInt();
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        for (int qItr = 0; qItr < q; qItr++) {
            String s = scanner.nextLine();

            int result = palindromeIndex(s);

            bufferedWriter.write(String.valueOf(result));
            bufferedWriter.newLine();
        }

        bufferedWriter.close();

        scanner.close();
    }
}
