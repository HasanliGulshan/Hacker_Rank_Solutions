import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {

    static int anagram(String s) {
        if (s.length() % 2 != 0) {
            return -1;
        } else {
           int count = 0;
           int n = s.length();
           String a = s.substring(0, n/2);
           String b = s.substring(n/2, n);

           for (int i=0; i<n/2; i++) {
               int index = b.indexOf(a.charAt(i));

               if (index != -1) {
                   char[] arr = b.toCharArray();
                   arr[index] = ' ';
                   b = String.valueOf(arr);
               } else {
                   count++;
               }
           }
            return count;
        }
    }

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int q = scanner.nextInt();
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        for (int qItr = 0; qItr < q; qItr++) {
            String s = scanner.nextLine();

            int result = anagram(s);

            bufferedWriter.write(String.valueOf(result));
            bufferedWriter.newLine();
        }

        bufferedWriter.close();

        scanner.close();
    }
}
